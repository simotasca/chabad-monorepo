---
import EventsSection from "@/components/events/EventsSection.astro";
import OrganizationSection from "@/components/organizations/OrganizationSection.astro";
import Newsletter from "@/components/sidebar/Newsletter.astro";
import ShadowBox from "@/components/ui/ShadowBox.astro";
import Carousel from "@/components/ux/carousel/Carousel.astro";
import CarouselItem from "@/components/ux/carousel/CarouselItem.astro";
import PageLayout from "@/layouts/PageLayout.astro";
import { errorResponse } from "@/lib/server/error-response";
import { checkLangParam, getTranslations } from "@/lib/server/lang/lang";
import supabase from "@/lib/server/supabase";
import { throwError } from "@/lib/shared/error";
import { splitContacts } from "@/lib/shared/supabase/contacts";
import logoFacebook from "@/images/icons/facebook-white.svg";
import logoInstagram from "@/images/icons/instagram-white.svg";
import { Image } from "astro:assets";
import { getData } from "../_utils";
import {
  organizationContactsMapper,
  organizationsMapper,
} from "@/lib/shared/supabase/organizations";
import { parseMdx } from "@/lib/server/mdx";
import { nextEvents } from "@/lib/shared/supabase/events";
import BucketImage from "@/components/supabase/BucketImage.astro";

if (!checkLangParam(Astro)) {
  return errorResponse(Astro.url);
}

const t = await getTranslations("pages/organizations", Astro.url);

// TODO METTERE I DATI DELLA SINGOLA ORGANIZZAZIONE

const { slug } = Astro.params;

// type Organization = Pick<
//   Tables<"organizations">,
//   | "name"
//   | "city"
//   | "main_image"
//   | "content"
//   | "created_at"
//   | "link_donate"
//   | "markdown"
//   | "slogan"
//   | "website"
// >;

// export type Props = {
//   mainOrganization: Organization;
//   [key: string]: any;
// };

// const { mainOrganization } = Astro.props;

const organization = !slug
  ? null
  : await supabase
      .from("organizations")
      .select("*,events_organizations(*, events(*)), contacts(*)")
      .eq("slug", slug)
      .then(({ data, error }) => {
        if (error) {
          throwError(
            "organization page",
            "Error fetching organization: " + error.message
          );
        }
        return !data?.length ? null : data[0];
      });

if (!organization) {
  return errorResponse(Astro.url);
}

const organizations = await supabase
  .from("organizations")
  .select("*, contacts(*)")
  .then(({ error, data }) => {
    if (error) {
      throwError(
        "PAGE Organizations",
        "Error fetching organizations-by-city:" + error.message
      );
    }
    return data?.map(organizationsMapper).map(organizationContactsMapper) || [];
  });

const Content = await parseMdx(organization.content);
const { contacts, social } = splitContacts(organization.contacts);
const events = await nextEvents(supabase, 10);
---

<PageLayout title="demo" description="demo">
  <section slot="title">
    <div class="h-2 xs:h-4 sm:h-6"></div>
  </section>

  <section slot="content-1">
    <ShadowBox class="mb-4">
      <div
        class="grid grid-cols-2 w-full gap-4 items-center bg-[#031B4D] border-b-white border-b-[1px] text-white py-2 pl-3 pr-3 xs:pr-6"
      >
        <div class="flex justify-start items-center h-full gap-1 xs:gap-3">
          <BucketImage
            src={organization.logo}
            class="h-8 aspect-square object-cover"
            alt="chabad logo icon"
          />

          <h2
            class="font-display text-sm xs:text-base sm:text-lg uppercase leading-3 xs:leading-4 sm:leading-4 md:leading-4 lg:leading-4"
          >
            {organization.name}
          </h2>
        </div>

        <div
          class="flex gap-3 xs:gap-6 justify-end items-end font-montserrat font-medium text-sm sm:text-base"
        >
          {
            organization.website && (
              <a href={organization.website}>
                <span>Website</span>
              </a>
            )
          }
          <a href="#contacts"><span>Contatti</span></a>
        </div>
      </div>
      <div class="stack place-items-center">
        <BucketImage
          src={organization.main_image}
          alt="immagine a caso"
          class="w-full h-full object-cover aspect-[4/3] xs:aspect-[9/4]"
        />
        <div
          class="w-full h-full bg-blue-950 opacity-60 aspect-[4/3] xs:aspect-[9/4]"
        >
        </div>
        <div class="z-10 flex flex-col justify-center gap-y-1">
          <h3
            class="text-white font-display font-bold text-3xl xs:text-4xl sm:text-5xl uppercase text-center mx-2 max-md:mt-2"
            style="text-shadow: 0 0 5px rgb(37, 37, 37)"
          >
            {organization.name}
          </h3>

          <p
            class="text-white font-display font-medium text-2xl mx-auto"
            style="text-shadow: 0 0 5px rgb(37, 37, 37)"
          >
            {organization.slogan && organization.slogan}
          </p>

          <div class="h-2 md:h-10"></div>

          {
            organization.link_donate && (
              <button class="bg-blue-950 border border-white text-white font-raleway max-sm:text-sm uppercase font-semibold px-16 py-2 mx-auto">
                <a href={organization.link_donate}>
                  <p>{t("contacts.donate")}</p>
                </a>
              </button>
            )
          }
        </div>
      </div>
      <div class="h-14 bg-[#18315E] w-full border-t-[1px] border-t-white"></div>

      <div class="px-12">
        <div
          class="max-w-full prose prose-h2:text-3xl prose:font-raleway prose:text-black prose-h2:font-display prose-h2:my-2 prose-h3:uppercase prose-h3:my-1 py-10"
        >
          <Content />
        </div>
      </div>
      {
        !!organization.events_organizations?.length && (
          <div class="relative pt-4 pb-8 pl-4 pr-8">
            <h3 class="text-blue-950 uppercase text-xl ml-6 mb-4">
              {t("single-project-page.events-section-title")}
            </h3>
            <Carousel
              nextArrowId="arrow-next-event"
              prevArrowId="arrow-previous-event"
            >
              {organization.events_organizations.map(({ events: e }) => (
                <CarouselItem>
                  <EventsSection
                    associazione={organization.name}
                    nome={e?.name}
                    data={e?.date}
                    immagine={e?.main_image}
                    cittÃ ={e?.city}
                  />
                </CarouselItem>
              ))}
            </Carousel>
            <button
              id="arrow-previous-event"
              class="absolute rounded-[100%] w-12 h-12 shadow left-0 top-1/2 -translate-x-5 lg:-translate-x-8 -translate-y-1/2"
            >
              <img
                class="w-full"
                src="/images/icons/arrow-prev.svg"
                alt="carousel icon"
              />
            </button>
            <button
              id="arrow-next-event"
              class="absolute rounded-[100%] w-12 h-12 z-10 shadow right-0 top-1/2 translate-x-5 lg:translate-x-9 -translate-y-1/2"
            >
              <img
                class="w-full"
                src="/images/icons/arrow-next.svg"
                alt="icona carousel"
              />
            </button>
          </div>
        )
      }

      <!-- <pre>
        {JSON.stringify(organization, null, 2)}
      </pre> -->

      <div
        id="contacts"
        class="bg-[#18315E] px-10 py-6 grid sm:grid-cols-3 gap-4 text-white font-montserrat mt-6 scroll-m-10"
      >
        {
          (!!contacts.length || !!social.length) && (
            <ul>
              <li class="text-lg uppercase font-semibold">
                {t("contacts.title")}
              </li>

              <li class="flex flex-col gap-1 text-sm">
                {contacts.map(({ key, value }) => (
                  <p>
                    <b>{key}: </b>
                    <span>{value}</span>
                  </p>
                ))}
              </li>
              <li class="flex gap-2 sm:gap-3 items-center pt-2">
                {social.map((s) => (
                  <a
                    href={s.value}
                    target="_blank"
                    class="[&_img]:h-5 [&_img]:w-5 [&_img]:object-cover [&_img]:object-center"
                  >
                    {
                      {
                        facebook: <Image src={logoFacebook} alt="facebook" />,
                        instagram: (
                          <Image src={logoInstagram} alt="instagram" />
                        ),
                      }[s.key]
                    }
                  </a>
                ))}
              </li>
            </ul>
          )
        }

        <ul>
          <li class="text-lg uppercase font-semibold">
            {t("contacts.location")}
          </li>
          <li class="flex items-start gap-1 text-sm">
            <span><b>{organization.city}</b>, {organization.address}</span>
          </li>
        </ul>
        <div>
          <p class="text-lg uppercase font-semibold">
            {t("contacts.contribute")}
          </p>
          {
            !!organization.iban && (
              <ul>
                <li class="flex items-center gap-1 text-sm">
                  <b>Iban:</b>
                  <span>{organization.iban}</span>
                </li>
              </ul>
            )
          }

          {
            !!organization.link_donate && (
              <ul>
                <li class="flex items-center gap-1 text-sm">
                  <button class="bg-blue-950 border border-white text-white font-raleway uppercase font-semibold px-10 py-2 mt-2">
                    <a href={organization.link_donate}>
                      <p>{t("contacts.donate")}</p>
                    </a>
                  </button>
                </li>{" "}
              </ul>
            )
          }
        </div>
      </div>
    </ShadowBox>
  </section>

  <section slot="sidebar" class="md:flex flex-col gap-4">
    <ShadowBox class="max-md:hidden">
      <div class="py-5">
        <EventsSection
          nome={events[0].name}
          data={events[0].date}
          immagine={events[0].main_image}
          citta={events[0].city}
          url={events[0].url}
        />
      </div>
    </ShadowBox>

    <div class="hidden md:block">
      <Newsletter />
    </div>
  </section>

  <section slot="elenco-cell" class="sm:px-4 pb-8">
    <h2
      class="font-raleway uppercase text-blue-950 font-semibold text-2xl mb-2"
    >
      {t("single-project-page.chabad-projects-section-title")}
    </h2>
    <div class="flex flex-col gap-6">
      <OrganizationSection organizations={organizations} />
    </div>
  </section>

  <section slot="elenco-desktop">
    <ShadowBox class="mx-5 md:px-6 lg:px-12 pb-8">
      <h2
        class="font-raleway uppercase text-blue-950 font-bold text-2xl mt-8 mb-4"
      >
        {t("single-project-page.chabad-projects-section-title")}
      </h2>
      <div class="flex flex-col gap-6">
        <OrganizationSection organizations={organizations} />
      </div>
    </ShadowBox>
  </section>
</PageLayout>
